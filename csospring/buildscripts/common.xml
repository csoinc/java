<project>
	<target name="init">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
	</target>
	<target name="clean">
		<delete dir="${dist.dir}"></delete>
	</target>
	
  	<tstamp>
    	<format property="createDate" pattern="yyyyMMdd" offset="0" unit="hour"/>
  	</tstamp>

	<target name="build-java-project" description="Build and jar Java project">
		<getProjectData projectName="${project.name}" /> 
		<eclipse.refreshLocal resource="${project.name}" depth="infinite" />
		<projectBuild ProjectName="${project.name}" BuildType="full" />
		<eclipse.refreshLocal resource="${project.name}" depth="infinite" />
	</target>
	
	<target name="build-web-project" description="Build Web Project">
		<getProjectData projectName="${project.name}" /> 
		<eclipse.refreshLocal resource="${project.name}" depth="infinite" />
		<projectBuild ProjectName="${project.name}" BuildType="full" />
		<eclipse.refreshLocal resource="${project.name}" depth="infinite" />
	</target>		
	
	<target name="prepare-package">
		<echo message="Start building jar file ${jar.name}"/>
		<getProjectData projectName="${service.project.name}" /> 		
		<jar destfile="${build.dir}/${jar.name}.jar"
			update="YES"
			basedir="${locationName}/bin"
			includes="**/*"
			excludes="${filter.service}"
		/>
		<echo message="Start building war file ${war.name}"/>
		<getProjectData projectName="${web.project.name}" />
		<delete dir="${build.dir}/${war.name}"></delete>
		<copy todir="${build.dir}/${war.name}" verbose="false" overwrite="true">				
			<fileset dir="${locationName}/WebContent"
				includes="**/*"
				excludes="${filter.web}" />
		</copy>		
		<copy todir="${build.dir}/${war.name}/WEB-INF/lib" verbose="true">
			<fileset dir="${build.dir}" includes="${jar.name}.jar"/>
		</copy>
	</target>
	
	<target name="generate-ear">
		<zip destfile="${build.dir}/${war.name}.war" >				
			<fileset dir="${build.dir}/${war.name}" includes="**" >					
			</fileset>					
		</zip>	
		<delete dir="${build.dir}/${ear.name}"></delete>
		<mkdir dir="${build.dir}/${ear.name}" />
		<getProjectData projectName="${ear.project.name}" />		
		<copy todir="${build.dir}/${ear.name}" overwrite="true">
			<fileset dir="${locationName}" includes="META-INF/**/*"/>
		</copy>
		<replace dir="${build.dir}/${ear.name}/META-INF" token="${token.project.prefix}" 
			value="${replace.project.prefix}" includes="**/*.xml" />
		<zip destfile="${dist.dir}/${ear.name}_${createDate}_${build.version}.ear">
    		<fileset dir="${build.dir}/${ear.name}" 
    			includes="META-INF/**" />
    		<fileset dir="${build.dir}" includes="${war.name}.war" />
    	</zip>
		<antcall target="SVNInfo" inheritall="true"></antcall>
	</target>
	
	<target name="replace-settings">
		<!-- app name in web.xml -->
		<replace file="${build.dir}/${war.name}/WEB-INF/web.xml" token="${token.webapp.name}" value="${replace.webapp.name}" /> 
		<replace file="${build.dir}/${war.name}/WEB-INF/web.xml" token="${token.webapp.description}" value="${replace.webapp.description}" />
		
		<!-- log4j -->
		<replace dir="${build.dir}/${war.name}" token="${token.log4j}" value="${replace.log4j}"
			includes="/WEB-INF/classes/log4j.*" />
		
	</target>	
	
	<target name="SVNInfo" description="Create release notes">
		<getProjectData projectName="${ear.project.name}" />
		<exec executable="${svn.path}" output="${dist.dir}/${ear.name}_${createDate}_${release.notes}" append="false">
			<arg line="info ${locationName}"/>  
		</exec>
		
		<getProjectData projectName="${service.project.name}" />
		<exec executable="${svn.path}" output="${dist.dir}/${ear.name}_${createDate}_${release.notes}" append="true">
			<arg line="info ${locationName}"/>  
		</exec>

		<getProjectData projectName="${web.project.name}" />
		<exec executable="${svn.path}" output="${dist.dir}/${ear.name}_${createDate}_${release.notes}" append="true">
			<arg line="info ${locationName}"/>  
		</exec>
	</target>	
</project>
