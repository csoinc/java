package com.oyou.spring2.common;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

public class CollectionsHelper {

	protected final Log logger = LogFactory.getLog(getClass());

	public void process() {
		logger.debug(">>process");

	}

	public boolean isAnagrams(String str1, String str2) {
		boolean yes = true;
		if (str1 == null)
			return false;
		if (str2 == null)
			return false;
		if (str1.equals(str2))
			return true;
		for (int i = 0; i < str1.length(); i++) {
			char c = str1.charAt(i);
			if (str2.indexOf(c) != -1)
				continue;
			else {
				yes = false;
				break;
			}
		}

		char[] chars1 = str1.toCharArray();
		char[] chars2 = str2.toCharArray();
		
		Arrays.sort(chars1);
		Arrays.sort(chars2);
		
		if ((new String(chars1)).equals(new String(chars2))) return true;
		else return false;
		
		//return yes;
	}

	public Map<String, Integer> checkDuplicated(List<Integer> numbers) {
		Map<String, Integer> myMap = new HashMap<String, Integer>();
		List<Integer> myNumbers = new ArrayList<Integer>();
		myNumbers.addAll(numbers);
		for (Integer myNum : myNumbers) {
			int count = 0;
			for (Integer num : numbers) {
				if (myNum.intValue() == num.intValue())
					count++;
			}
			if (count > 1)
				myMap.put(myNum.toString(), new Integer(count));
		}
		return myMap;
	}

	public boolean checkVersion(String v1, String v2) {
		if (v1 == null)
			return false;
		if (v2 == null)
			return false;
		if (v1.length() > v2.length())
			return false;

		boolean yes = true;

		Scanner scanner1 = new Scanner(v1);
		scanner1.useDelimiter(".");
		while (scanner1.hasNext()) {
			if (scanner1.hasNextInt()) {
				int v1int = scanner1.nextInt();
				boolean isFind = false;

				Scanner scanner2 = new Scanner(v2);
				scanner2.useDelimiter(".");
				while (scanner2.hasNext()) {
					if (scanner2.hasNextInt()) {
						int v2int = scanner2.nextInt();
						if (v1int == v2int) {
							isFind = true;
							break;
						}
					}
				}
				if (isFind)
					continue;
				else {
					yes = false;
					break;
				}
			} else {
				String v1str = scanner1.next();
				boolean isFind = false;

				Scanner scanner2 = new Scanner(v2);
				scanner2.useDelimiter(".");
				while (scanner2.hasNext()) {
					String v2str = scanner2.next();
					if (v1str.equals(v2str)) {
						isFind = true;
						break;
					}
				}
				if (isFind)
					continue;
				else {
					yes = false;
					break;
				}
			}
		}
		return yes;
	}

}